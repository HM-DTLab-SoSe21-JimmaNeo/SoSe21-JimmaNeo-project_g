@page "/pictureedit/{ChapterId:int}/{Id:int}"
@inject NavigationManager NavigationManager
@inject Services.PictureElementDefinitionBackendAccessService PictureElementDefinitionService

<h5>Picture Definition</h5>

@if (PictureDefinitionDto != null)
{
<EditForm EditContext="@context" OnSubmit="OnSubmit">

    <label>insert a Picture URL here</label>
    <br />
    <InputText @bind-Value="Uri" />

</EditForm>

    <button class="btn btn-light" @onclick="SavePictureToBackend">Save Picture Element</button>
    <button class="btn btn-light" @onclick="NavigateBack">Save and go back</button>
}
else
{
    <h5>Picture definition in loading (or not found) ...</h5>
}

@code{
    [Parameter]
    public int Id { get; set; }
    [Parameter]
    public int ChapterId { get; set; }
    public int CourseId = 1;
    public string Uri = "";

    public PictureDefinitionDto PictureDefinitionDto { get; set; }
    private EditContext context { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (Id != 0)
        {
            var existingText = await PictureElementDefinitionService.GetPictureElementById(CourseId, ChapterId, Id);
            PrepareEditOrAddOfPictureElementDefinition(existingText);
        }
        else
        {
            PrepareEditOrAddOfPictureElementDefinition(new PictureDefinitionDto());
        }
        await base.OnParametersSetAsync();

        context = new EditContext(PictureDefinitionDto);
    }

    private void PrepareEditOrAddOfPictureElementDefinition(PictureDefinitionDto c)
    {
        this.PictureDefinitionDto = c;
    }

    private void OnSubmit(EditContext context)
    {

    }

    private async void SavePictureToBackend()
    {
        if(Uri == null)
        {
            Uri = "1";
        }
        PictureDefinitionDto.PictureUri = new System.Uri(Uri);
        PictureDefinitionDto.ChapterElementType = (ChapterElementType)2;
        var isValid = context.Validate();
        if (isValid)
        {
            var answer = await PictureElementDefinitionService.AddOrUpdatePictureElement(CourseId, ChapterId, PictureDefinitionDto);
            if (answer != null)
            {
                this.PictureDefinitionDto.Id = answer.Id; //refresh id (if created)
            }
        }
    }

    public void NavigateBack()
    {
        SavePictureToBackend();
        NavigationManager.NavigateTo("/elementdef/" + ChapterId);
    }
}