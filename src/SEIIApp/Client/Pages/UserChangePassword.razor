@page "/passwordsetter/{userId:int}"
@inject NavigationManager NavigationManager
@inject Services.LoginBackendAccessService LoginService
@inject Services.UserDefinitionBackendService UserService
@layout MainLayoutBlank
@inject Services.BiscuitService bisquitService


<div oncontextmenu='return false' class="loginscreen">
    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="card" style=" margin-bottom: 20px; border: none">

                    <form onsubmit="event.preventDefault()" class="boxlogin">
                        <h1>Alexandria</h1>
                        <p class="text-muted"> Create/Update username and password</p>

                        <input type="text" placeholder="Username" @bind="username">
                        <input type="password" placeholder="Password" @bind="password">
                        <button type="submit" class="btn btn-primary" @onclick="LoginAbfrage" value="Continue" name="" href="#">Continue</button>

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>


@code {

    [Parameter]
    public int userId { get; set; }

    public String username { get; set; }
    public String password { get; set; }

    private async void LoginAbfrage()
    {
        var user = await UserService.GetUserById(userId);

        var authDto = await LoginService.GetLoginById(user.AuthDefinitions[0].Id);

        RoleType role;

        if (username != null && password != null)
        {
            role = authDto.Role;

            authDto.Password = password;
            authDto.UserName = username;

            await LoginService.UpdateUserPassword(authDto);

            user.AuthDefinitions[0].UserName = username;

            int param = 0;

            switch (role)
            {
                case RoleType.Admin:
                    param = 1;
                    break;
                case RoleType.Student:
                    param = 2;
                    break;
                case RoleType.Teacher:
                    param = 1;
                    break;
                default:
                    param = 1;
                    break;
            }

            bisquitService.User = user;

            NavigationManager.NavigateTo("/home/" + param + "/" + user.UserId);


        }
    }

}

