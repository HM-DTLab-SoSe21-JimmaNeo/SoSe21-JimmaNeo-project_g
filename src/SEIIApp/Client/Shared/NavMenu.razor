@inject Services.CourseDefinitionBackendAccessService CourseDefinitionService
@inject Services.BiscuitService BiscuitService

<div class="top-row pl-4 navbar navbar-dark" style="background-color: #1565c0;">
    <a class="navbar-brand" href="">Alexandria</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>



<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">

        <li class="nav-item px-3">
            <NavLink class="nav-link" style="color:white" href="/home/1" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        @if (BiscuitService.User.AuthDefinitions[0].Role != RoleType.Student)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" style="color:white" href="coursedef">
                    <span class="oi oi-align-center" aria-hidden="true"></span> Course Management
                </NavLink>
            </li>

        }

        @{
            if (Courses != null && Courses?.Length > 0)
            {
                foreach (var course in Courses)
                {
                    <li class="nav-item px-3">
                        @if (BiscuitService.User.AuthDefinitions[0].Role != RoleType.Student)
                        {
                            @if (course.Visible) // Icon for visible courses.
                            {
                                <a class="nav-link" style="color:white" href="/coursedefedit/ @(course.CourseId)">
                                    <span class="oi oi-list-rich" aria-hidden="true"></span> @(course.CourseName)
                                </a>
                            }
                            @if (!course.Visible) // And another Icon for non-visible courses.
                            {
                                <a class="nav-link" style="color:white" href="/coursedefedit/ @(course.CourseId)">
                                    <span class="oi oi-ban" aria-hidden="true"></span> @(course.CourseName)
                                </a>
                            }


                        }
                        else
                        {
                            @if (course.Visible) // Icon for visible courses.
                            {
                                <a class="nav-link" style="color:white" href="/coursestudentview/ @(course.CourseId)">
                                    <span class="oi oi-list-rich" aria-hidden="true"></span> @(course.CourseName)
                                </a>
                            }

                        }
                    </li>
                }
                if (BiscuitService.User.AuthDefinitions[0].Role.Equals(RoleType.Student))
                {
                    <a class="nav-link" style="color:white" href="/getallchapters">
                        <span class="oi oi-list-rich" aria-hidden="true"></span> getAllCourses
                    </a>
                }
            }
        }

        <li class="nav-item px-3">
            <NavLink class="nav-link" style="color:white" href="coursedefedit/0">
                <span class="oi oi-plus" aria-hidden="true"></span> Create new Course
            </NavLink>
        </li>


        @if (BiscuitService.User.AuthDefinitions[0].Role == RoleType.Teacher)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" style="color:white" href="courseuseroverview">
                    <span class="oi oi-people" aria-hidden="true"></span> User Management
                </NavLink>
            </li>

        }

        @if (BiscuitService.User.AuthDefinitions[0].Role == RoleType.Admin)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" style="color:white" href="useroverview">
                    <span class="oi oi-people" aria-hidden="true"></span> User Management
                </NavLink>
            </li>

        }



    </ul>
</div>

@code {
    private CourseDefinitionBaseDto[] Courses { get; set; }

    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;


    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        this.Courses = BiscuitService.User.AsignedCourses;
    }
}