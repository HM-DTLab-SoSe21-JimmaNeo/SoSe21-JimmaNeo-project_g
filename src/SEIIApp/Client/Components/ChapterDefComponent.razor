@inject NavigationManager NavigationManager

@{
    if (ChapterDefinitionDto != null)
    {
        <EditForm Model="ChapterDefinitionDto">
            <DataAnnotationsValidator />

            <label>Chapter Name</label>
            <InputText @bind-Value="ChapterDefinitionDto.ChapterName" />
            <ValidationSummary />

            <button class="btn btn-light btn-sm" @onclick="AddChapterElement">Manage Chapter Elements</button>

        </EditForm>
    }
    else
    {
        <label>Loading Chapter Element Definition ...</label>
    }
}

@code {

    [Parameter]
    public ChapterDefinitionDto ChapterDefinitionDto { get; set; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        InitiChapterDefintionDto();
    }

    private void InitiChapterDefintionDto()
    {
        if (ChapterDefinitionDto.ChapterElements == null)
            ChapterDefinitionDto.ChapterElements = Array.Empty<ChapterElementDefinitionDto>();

    }

    private void AddChapterElement()
    {
        NavigationManager.NavigateTo("/elementdef/1/1");
    }
    private void RemoveChapterElement(ChapterElementDefinitionDto chapterName)
    {
        ChapterDefinitionDto.ChapterElements = ChapterDefinitionDto.ChapterElements.Where(e => e != chapterName).ToArray();
    }


}
